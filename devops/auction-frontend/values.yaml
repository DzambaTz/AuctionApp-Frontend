# Default values for auction-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

metadata:
  name: frontend
  namespace: auction

image:
  repository: abhpraksa.azurecr.io/frontend:v1.0.0
  # B64 encoded .docker/config.json
  auth: <docker login>
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  container: frontend

imagePullSecrets: 
  - name: docker-login
nameOverride: ""
fullnameOverride: ""

init:
  enabled: true

probes:
  livenessProbe:
    httpGet:
      path: /
      port: 80
      httpHeaders:
       - name: Test
         value: Test
    initialDelaySeconds: 20
    periodSeconds: 25
    timeoutSeconds: 20

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: frontend
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  tls: 
    - secret: frontend-auction-tls
      hosts: 
      - auction.racun.ninja
  rules:
  - host: auction.racun.ninja
    http:
      paths:
      - pathType: Prefix
        path: /
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-test"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "500m"
    memory: "1024M"
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
